"""init

Revision ID: 228bc3f6c18e
Revises: 
Create Date: 2022-04-13 14:12:04.155964

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '228bc3f6c18e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('parts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('isUsed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.Column('flag', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pcs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('userId_created', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['userId_created'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('components',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('part_id', sa.Integer(), nullable=False),
    sa.Column('pc_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['part_id'], ['parts.id'], ),
    sa.ForeignKeyConstraint(['pc_id'], ['pcs.id'], ),
    sa.PrimaryKeyConstraint('id', 'part_id', 'pc_id')
    )
    # ### end Alembic commands ###
    op.execute("COMMIT")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('components')
    op.drop_table('pcs')
    op.drop_table('users')
    op.drop_table('parts')
    # ### end Alembic commands ###
    op.execute("COMMIT")

