version: '3.5'
services:
  app:
    container_name: flask
    build:
      context: .
      dockerfile: Dockerfile
    env_file: database.conf
    ports:
      - "5000:5000"
    command: [ "flask", "run", "--host", "0.0.0.0" ]
    depends_on:
      - database

  database:
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: nguyen2442
      POSTGRES_PASSWORD: nguyen2442
      POSTGRES_HOST_AUTH_METHOD: trust
    container_name: postgres
    image: postgres:latest
    env_file: database.conf
    ports:
      - 5432:5432
    volumes:
      - db_volume:/var/lib/postgresql

volumes:
  db_volume:



# version: "3"

# networks:
#     malis3-network:

# volumes:
#     db-data:

# services:
#     db:
#         image: postgres:13-alpine
#         environment:
#             - "POSTGRES_PASSWORD=postgres"
#         ports:
#             - "5432:5432"
#         volumes:
#             - db-data:/var/lib/postgresql/data
#         networks:
#             malis3-network:
#         tty: true
#         stdin_open: true
#     redis:
#         image: redis:6-alpine
#         ports:
#             - "6379:6379"
#         networks:
#             malis3-network:
#         tty: true
#         stdin_open: true
#     mailhog:
#         image: skilldlabs/mailhog
#         ports:
#             - "1025:1025"
#             - "5001:8025"
#         networks:
#             malis3-network:
#         tty: true
#         stdin_open: true
#    wiki:
#        image: requarks/wiki:2
#        depends_on:
#            - malis3-backend-postgres
#        environment:
#            DB_TYPE: postgres
#            DB_HOST: db
#            DB_PORT: 5432
#            DB_USER: postgres
#            DB_PASS: postgres
#            DB_NAME: malis3-wiki
#        ports:
#            - "5002:3000"
#        networks:
#            malis3-network:
#        tty: true
#        stdin_open: true
